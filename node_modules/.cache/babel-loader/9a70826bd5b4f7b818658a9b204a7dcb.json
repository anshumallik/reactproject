{"ast":null,"code":"var _jsxFileName = \"E:\\\\anshu\\\\react-task\\\\users-subs\\\\src\\\\components\\\\Subscriber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Suscriber = () => {\n  _s();\n\n  const [search, setSearch] = useState([]);\n  const [data, setData] = useState([]);\n  const [order, setorder] = useState(\"ASC\");\n  const [users, setUsers] = useState([{}]);\n  useEffect(() => {\n    fetch('data/users.json').then(res => res.json()).then(data => {\n      setUsers(data);\n    });\n  }, []);\n\n  const getData = () => {\n    fetch('./data/subscriptions.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJson) {\n      console.log(myJson);\n      setData(myJson);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const sorting = col => {\n    if (order === \"ASC\") {\n      const sorted = [...data].sort((a, b) => a[col].toString().toLocaleLowerCase() > b[col].toString().toLocaleLowerCase() ? 1 : -1 //   ||\n      // a[col].Number.toLocaleLowerCase() < b[col].Number.toLocaleLowerCase() ? 1 : -1\n      );\n      setData(sorted);\n      setorder(\"DSC\");\n    }\n\n    if (order === \"DSC\") {\n      const sorted = [...data].sort((a, b) => a[col].toString().toLocaleLowerCase() < b[col].toString().toLocaleLowerCase() ? 1 : -1);\n      setData(sorted);\n      setorder(\"ASC\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Package\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Expire on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [data.map((currElem, index) => {\n          const user = users.find(uid => uid.id === Number(val.user_id));\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: currElem.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currElem.confirmed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currElem.recovered\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currElem.deaths\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currElem.active\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currElem.lastupdatedtime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this);\n        }), data.map((val, key) => {\n          const user = users.find(uid => uid.id === Number(val.user_id));\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"ID\",\n              children: val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"User ID\",\n              children: val.user_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Username\",\n              children: [(user === null || user === void 0 ? void 0 : user.username) || '-', \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Package\",\n              children: val.package\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": \"Expire on\",\n              children: val.expires_on\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Suscriber, \"APKQ+A0JwepITxI+2F6pgm7P14g=\");\n\n_c = Suscriber;\nexport default Suscriber;\n\nvar _c;\n\n$RefreshReg$(_c, \"Suscriber\");","map":{"version":3,"sources":["E:/anshu/react-task/users-subs/src/components/Subscriber.js"],"names":["React","useEffect","useState","Suscriber","search","setSearch","data","setData","order","setorder","users","setUsers","fetch","then","res","json","getData","headers","response","console","log","myJson","sorting","col","sorted","sort","a","b","toString","toLocaleLowerCase","map","currElem","index","user","find","uid","id","Number","val","user_id","confirmed","recovered","deaths","active","lastupdatedtime","key","username","package","expires_on"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst Suscriber = () => {\r\n    const [search, setSearch] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [order, setorder] = useState(\"ASC\");\r\n\r\n    const [users, setUsers] = useState([{}])\r\n\r\n    useEffect(() => {\r\n        fetch('data/users.json').then((res) => res.json()).then((data) => {\r\n            setUsers(data)\r\n        })\r\n\r\n    }, [])\r\n\r\n    const getData = () => {\r\n        fetch('./data/subscriptions.json'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                setData(myJson)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const sorting = (col) => {\r\n        if (order === \"ASC\") {\r\n            const sorted = [...data].sort((a, b) =>\r\n                a[col].toString().toLocaleLowerCase() > b[col].toString().toLocaleLowerCase() ? 1 : -1\r\n                //   ||\r\n                // a[col].Number.toLocaleLowerCase() < b[col].Number.toLocaleLowerCase() ? 1 : -1\r\n            );\r\n            setData(sorted);\r\n            setorder(\"DSC\");\r\n        }\r\n        if (order === \"DSC\") {\r\n            const sorted = [...data].sort((a, b) =>\r\n                a[col].toString().toLocaleLowerCase() < b[col].toString().toLocaleLowerCase() ? 1 : -1\r\n\r\n            );\r\n            setData(sorted);\r\n            setorder(\"ASC\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            \r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">User ID</th>\r\n                        <th scope=\"col\">Username</th>\r\n                        <th scope=\"col\">Package</th>\r\n                        <th scope=\"col\">Expire on</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map((currElem, index) => {\r\n                            const user = users.find(uid => uid.id === Number(val.user_id)); \r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{currElem.id}</td>\r\n                                    <td>{currElem.confirmed}</td>\r\n                                    <td>{currElem.recovered}</td>\r\n                                    <td>{currElem.deaths}</td>\r\n                                    <td>{currElem.active}</td>\r\n                                    <td>{currElem.lastupdatedtime}</td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }\r\n                    { data.map((val, key) => {\r\n                        \r\n                        const user = users.find(uid => uid.id === Number(val.user_id)); \r\n                       \r\n                        return <tr key={key}>\r\n                            <td data-label=\"ID\">{val.id}</td>\r\n                            <td data-label=\"User ID\">{val.user_id}</td>\r\n                            <td data-label=\"Username\">{user?.username || '-'} </td>\r\n                            <td data-label=\"Package\">{val.package}</td>\r\n                            <td data-label=\"Expire on\">{val.expires_on}</td>\r\n\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Suscriber;"]},"metadata":{},"sourceType":"module"}