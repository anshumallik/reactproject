{"ast":null,"code":"var _jsxFileName = \"E:\\\\anshu\\\\react-task\\\\users-subs\\\\src\\\\components\\\\Subscriber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Suscriber = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [order, setorder] = useState(\"ASC\");\n  const [data, setData] = useState([]);\n  const [users, setUsers] = useState([{}]);\n\n  const sorting = col => {\n    if (order === \"ASC\") {\n      const sorted = [...data].sort((a, b) => a[col].toString().toLocaleLowerCase() > b[col].toString().toLocaleLowerCase() ? 1 : -1);\n      setData(sorted);\n      setorder(\"DSC\");\n    }\n\n    if (order === \"DSC\") {\n      const sorted = [...data].sort((a, b) => a[col].toString().toLocaleLowerCase() < b[col].toString().toLocaleLowerCase() ? 1 : -1);\n      setData(sorted);\n      setorder(\"ASC\");\n    }\n  };\n\n  useEffect(() => {\n    fetch('data/users.json').then(res => res.json()).then(data => {\n      setUsers(data);\n    });\n  }, []);\n\n  const getData = async () => {\n    try {\n      const response = await fetch('./data/subscriptions.json');\n      const actualData = await response.json();\n      console.log(actualData);\n      setData(actualData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // useEffect(() => {\n  //     setTimeout(() => {\n  //         $(\"#subsTable\").DataTable();\n  //     }, 1000)\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card rounded-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"content-header\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Subscribed User Data List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search_data\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"float-end mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Search:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"search\",\n                className: \"input-field ms-2\",\n                placeholder: \"Search...\",\n                onChange: e => setQuery(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Suscriber, \"TcD+oZ2F/WUVhW/RB7IsyM5h/OM=\");\n\n_c = Suscriber;\nexport default Suscriber;\n\nvar _c;\n\n$RefreshReg$(_c, \"Suscriber\");","map":{"version":3,"sources":["E:/anshu/react-task/users-subs/src/components/Subscriber.js"],"names":["React","useEffect","useState","Suscriber","query","setQuery","order","setorder","data","setData","users","setUsers","sorting","col","sorted","sort","a","b","toString","toLocaleLowerCase","fetch","then","res","json","getData","response","actualData","console","log","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Suscriber = () => {\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n    const [order, setorder] = useState(\"ASC\");\r\n    const [data, setData] = useState([]);\r\n    const [users, setUsers] = useState([{}])\r\n\r\n    const sorting = (col) => {\r\n        if (order === \"ASC\") {\r\n            const sorted = [...data].sort((a, b) =>\r\n                a[col].toString().toLocaleLowerCase() > b[col].toString().toLocaleLowerCase() ? 1 : -1\r\n\r\n            );\r\n            setData(sorted);\r\n            setorder(\"DSC\");\r\n        }\r\n        if (order === \"DSC\") {\r\n            const sorted = [...data].sort((a, b) =>\r\n                a[col].toString().toLocaleLowerCase() < b[col].toString().toLocaleLowerCase() ? 1 : -1\r\n\r\n            );\r\n            setData(sorted);\r\n            setorder(\"ASC\");\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetch('data/users.json').then((res) => res.json()).then((data) => {\r\n            setUsers(data)\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const response = await fetch('./data/subscriptions.json');\r\n            const actualData = await response.json();\r\n            console.log(actualData);\r\n            setData(actualData)\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         $(\"#subsTable\").DataTable();\r\n    //     }, 1000)\r\n    // }, []);\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n\r\n            <div className=\"container content\">\r\n                <div className='card rounded-0'>\r\n                    <div className=\"card-header\">\r\n                        <div className=\"card-title mb-0\">\r\n                            <span className=\"content-header\"><strong>Subscribed User Data List</strong></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                        <div className=\"search_data\">\r\n                            <div className=\"float-end mb-2\">\r\n                                <label>\r\n                                    Search:\r\n                                </label>\r\n                                <input type=\"search\"\r\n                                    className=\"input-field ms-2\"\r\n                                    placeholder=\"Search...\"\r\n                                    onChange={(e) => setQuery(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Suscriber;"]},"metadata":{},"sourceType":"module"}